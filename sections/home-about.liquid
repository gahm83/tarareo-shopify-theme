<section id="tooltip-section" class="twcss-relative">
  <div class="twcss-w-10/12 twcss-max-w-[1120px] twcss-mx-auto">
    <div class="twcss-py-16">
      <div class="twcss-grid twcss-grid-cols-2 lg:twcss-grid-cols-4 twcss-row-span-4 -twcss-m-[16px]">
        {%- assign block_classnames = "
        twcss-col-span-1 twcss-row-span-2,
        twcss-col-span-1 twcss-row-span-1 twcss-aspect-square,
        twcss-col-span-1 twcss-row-span-1 twcss-aspect-square lg:twcss-col-start-2,
        twcss-col-span-2 twcss-row-span-2 twcss-aspect-[2/1] lg:twcss-row-start-1 lg:twcss-col-start-3,
        twcss-col-span-1 twcss-row-span-1 twcss-aspect-square lg:twcss-row-start-2 lg:twcss-col-start-3,
        twcss-col-span-1 twcss-row-span-2 lg:twcss-col-start-4 lg:twcss-row-start-2,
        twcss-col-span-1 twcss-row-span-1 twcss-aspect-square,
        twcss-col-span-2 twcss-row-span-2 twcss-aspect-[2/1]" | split: "," -%}
        {% for block in section.blocks %}
        <div class="about-item {{ block_classnames[forloop.index0] }}">
          {{ block.settings.image | image_url: width: 512 | image_tag: class: "twcss-w-full twcss-h-full twcss-object-cover twcss-object-center twcss-border-[16px] twcss-border-white" }}
          <span class="tooltip twcss-bg-[#FFE500] twcss-transition-opacity twcss-duration-300 twcss-font-bebasneue twcss-text-black twcss-uppercase twcss-text-[32px] twcss-leading-none twcss-whitespace-nowrap">{{ block.settings.text }}</span>
        </div>
        {% endfor %}
      </div>
    </div>
  </div>
</section>
{% schema %}
  {
    "name": "About",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "max_blocks": 8,
    "blocks": [
      {
        "name": "Title",
        "type": "title",
        "settings": [
          {
            "type": "text",
            "id": "text",
            "label": "Marca"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          }
        ]
      }
    ]
  }
{% endschema %}
{% style %}
  .about-item:hover .tooltip {
    opacity: 1;
  }
  .tooltip {
    opacity: 0;
    margin-left: 28px;
    padding: 10px;
    position: fixed;
    z-index: 1000;
  }
{% endstyle %}
{% javascript %}
(function () {
  document.addEventListener('DOMContentLoaded', function() {
  //   var containers = document.querySelectorAll('.about-item');
  //   containers.forEach(container => {
  //     var tooltip = container.querySelector('.tooltip');
  //     container.addEventListener('mousemove', function(e) {
  //       var rect = container.getBoundingClientRect();
  //       var x = e.clientX - rect.left;
  //       var y = e.clientY - rect.top;
  //       tooltip.style.left = x + 'px';
  //       tooltip.style.top = y + 'px';
  //     });
  //   });

  document.querySelectorAll('.about-item').forEach(container => {
    const tooltip = container.querySelector('.tooltip');

    let mouse = { x: 0, y: 0 };

    const ref = {
      getBoundingClientRect: () => ({
        top: mouse.y,
        right: mouse.x,
        bottom: mouse.y,
        left: mouse.x,
        width: 0,
        height: 0,
      }),
      clientWidth: 0,
      clientHeight: 0,
    };

    const popper = Popper.createPopper(ref, tooltip, {
      placement: 'bottom-start',
      modifiers: [
        {
          name: 'offset',
          options: {
            offset: [10, 10],
          },
        },
      ],
    });

    container.addEventListener('mousemove', (event) => {
      const rect = container.getBoundingClientRect();
      console.log(event, rect);
      mouse = {
        x: event.clientX,
        y: event.clientY
      };
      tooltip.style.display = 'block';
      popper.update();
    });

    container.addEventListener('mouseleave', () => {
      tooltip.style.display = 'none';
    });
  });
  });
})();
{% endjavascript %}