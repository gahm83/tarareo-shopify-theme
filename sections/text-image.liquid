<section id="text-image" class="twcss-relative twcss-w-full lg:twcss-h-screen {% if section.settings.schema == 'yellow' %} twcss-bg-[#FFE500]{% else %} twcss-bg-{{ section.settings.schema }}{% endif %}">
  <figure class="twcss-relative twcss-aspect-[1/0.9] lg:twcss-absolute lg:twcss-aspect-auto lg:twcss-w-1/2 lg:twcss-h-full lg:twcss-top-0 lg:twcss-right-0 lg:twcss-bottom-0">
    {{ section.settings.image | image_url: width: 980 | image_tag: class: "twcss-absolute twcss-w-full twcss-h-full twcss-object-cover twcss-object-center" }}
  </figure>
  <div class="twcss-w-10/12 twcss-max-w-[1120px] twcss-h-full twcss-mx-auto twcss-flex twcss-items-center twcss-py-16 lg:twcss-py-0">
    <div class="lg:twcss-grid lg:twcss-grid-cols-12">
      <div class="lg:twcss-col-span-5 twcss-space-y-8">
        {% if section.settings.title != blank %}
        <h2 class="twcss-font-bebasneue twcss-uppercase twcss-text-[36px] lg:twcss-text-[64px] twcss-leading-none w-8/12 {% if section.settings.schema == 'black' %} twcss-text-white{% endif %}">{{ section.settings.title }}</h2>
        {% endif %}
        {% if section.settings.subtitle != blank %}
        <h2 class="twcss-font-bebasneue twcss-uppercase twcss-text-[21px] lg:twcss-text-[32px] twcss-leading-none {% if section.settings.schema == 'black' %} twcss-text-white{% endif %}">{{ section.settings.subtitle }}</h2>
        {% endif %}
        {% if section.settings.content != blank %}
        <div class="twcss-text-2xl twcss-space-y-6 {% if section.settings.schema == 'black' %} twcss-text-white{% endif %}">
          {{ section.settings.content}}
        </div>
        {% endif %}
        {% if section.blocks.size > 0 %}
        {%- assign yellow_classnames = "twcss-bg-white twcss-border-white twcss-text-black,twcss-bg-black twcss-border-black twcss-text-white hover:twcss-text-black" | split: "," -%}
        {%- assign white_classnames = "twcss-bg-[#FFE500] twcss-border-[#FFE500] twcss-text-black,twcss-bg-black twcss-border-black twcss-text-[#FFE500] hover:twcss-text-black" | split: "," -%}
        {%- assign black_classnames = "twcss-bg-white twcss-border-white twcss-text-black,twcss-bg-[#FFE500] twcss-border-[#FFE500] twcss-text-black" | split: "," -%}
        <div class=" twcss-flex -twcss-m-3 twcss-flex-wrap">
          {% for block in section.blocks %}
          <a href="{{ block.settings.url }}" class="scroll-to twcss-flex twcss-flex-wrap twcss-items-center twcss-space-x-2 twcss-rounded-l-full twcss-rounded-r-full twcss-uppercase twcss-px-8 twcss-py-2 twcss-relative twcss-m-3 twcss-border twcss-whitespace-nowrap twcss-transition-all twcss-duration-150 {% if section.settings.schema == 'yellow' %}{{ yellow_classnames[forloop.index0] }} hover:twcss-border-black hover:twcss-bg-transparent {% elsif section.settings.schema == 'white' %} {{ white_classnames[forloop.index0] }} hover:twcss-border-black hover:twcss-bg-transparent {% elsif section.settings.schema == 'black' %}{{ black_classnames[forloop.index0] }} hover:twcss-text-white hover:twcss-border-white hover:twcss-bg-transparent {% endif %}">
            <span>{{ block.settings.text }}</span>
          </a>
          {% endfor %}
        </div>
        {% endif %}
      </div>
    </div>
  </div>
</section>
{% schema %}
  {
    "name": "Text | Image",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "settings": [
      {
        "type": "select",
        "id": "schema",
        "options": [
          {
            "value": "white",
            "label": "White"
          },
          {
            "value": "black",
            "label": "Black"
          },
          {
            "value": "yellow",
            "label": "Yellow"
          }
        ],
        "default": "yellow",
        "label": "Background Color"
      },
      {
        "type": "text",
        "id": "title",
        "label": "Title"
      },
      {
        "type": "text",
        "id": "subtitle",
        "label": "Subitle"
      },
      {
        "type": "richtext",
        "id": "content",
        "label": "Content"
      },
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      }
    ],
    "blocks": [
      {
        "type": "link",
        "name": "Link",
        "settings": [
          {
            "id": "url",
            "type": "text",
            "label": "Target"
          },
          {
            "id": "text",
            "type": "text",
            "label": "Link text"
          }
        ]
      }
    ]
    
  }
{% endschema %}
{% javascript %} 
(function () {
  document.addEventListener('DOMContentLoaded', function() {
    const links = document.querySelectorAll('a[href^="#"]');
    for (const link of links) {
      link.addEventListener('click', function(event) {
        event.preventDefault();
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          window.scrollTo({
            top: targetElement.offsetTop,
            behavior: 'smooth'
          });
        }
      });
    }
  });
})();
{% endjavascript %}